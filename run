#!/usr/bin/env python3

import hydra
from omegaconf import DictConfig


@hydra.main(version_base=None, config_path="configs", config_name="config")
def main(base_config: DictConfig):
    # Project-specific imports after Hydra-initialization to speed up Hydra-autocompletion.
    # import ...
    import logging

    from src.utils.config import merge_with_subconfig

    config : dict = merge_with_subconfig("experiment", base_config)
    undefined_parameters = [param_name for value, param_name in get_leaves(config) if value == "???"]
    assert not undefined_parameters, f"Undefined values {tuple(undefined_parameters)}"

    # Setting up Logging with LogLevel as specified by 'log'-argument.
    log = logging.getLogger(__name__)
    log.setLevel(config["log"])

    # TODO: Get component-specific config.
    # model_conf = config["model"]
    # TODO: Instantiate model from config.
    # build_model(model_conf)


if __name__ == "__main__":
    main()

